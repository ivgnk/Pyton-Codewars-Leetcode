"""
Done 04.09.2024. Topics: Math
3270. Find the Key of the Numbers

You are given three positive integers num1, num2, and num3.
The key of num1, num2, and num3 is defined as a four-digit number such that:
Initially, if any number has less than four digits, it is padded with leading zeros.
The ith digit (1 <= i <= 4) of the key is generated by taking the smallest digit among the ith digits of num1, num2, and num3.
Return the key of the three numbers without leading zeros (if any).

Example 1:
Input: num1 = 1, num2 = 10, num3 = 1000

Output: 0
Explanation:
On padding, num1 becomes "0001", num2 becomes "0010", and num3 remains "1000".
The 1st digit of the key is min(0, 0, 1).
The 2nd digit of the key is min(0, 0, 0).
The 3rd digit of the key is min(0, 1, 0).
The 4th digit of the key is min(1, 0, 0).
Hence, the key is "0000", i.e. 0.

Example 2:
Input: num1 = 987, num2 = 879, num3 = 798
Output: 777

Example 3:
Input: num1 = 1, num2 = 2, num3 = 3
Output: 1

Constraints:
1 <= num1, num2, num3 <= 9999

Solution
✏️ Easy Python solution with 1 infrequently used function
# Intuition
Convert all numbers to strings with leading zeros.
Select the appropriate positions in the strings.

# Approach
Use function zfill for make leading zeros.
"""

# Runtime 14 ms Beats 78.25%
# Memory 11.65 MB Beats 48.93%
def generateKey(num1, num2, num3):
    """
    :type num1: int
    :type num2: int
    :type num3: int
    :rtype: int
    """
    n=4
    n1s=str(num1).zfill(n)
    n2s=str(num2).zfill(n)
    n3s=str(num3).zfill(n)
    s=[min([n1s[i], n2s[i], n3s[i]]) for i in range(n)]
    return int(''.join(s))

print(generateKey(num1 = 1, num2 = 10, num3 = 1000))
print(generateKey(num1 = 987, num2 = 879, num3 = 798))
print(generateKey(num1 = 1, num2 = 2, num3 = 3))

